name: Run kayak timing predictor

on:
  schedule:
    - cron: "0 0,6,12,21 * * *"

jobs:
  run-predictor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://registry.npmjs.org"

      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install build dependencies
        run: yarn install

      - name: Run predictor
        id: run_predictor
        run: |
          yarn ts-node ./src/index.ts | grep 'Kayak timing prediction report: ' \
          | sed 's/^.*Kayak timing prediction report: //' | xargs -I {} echo "::set-output name=prediction::{}"
        env:
          ACCU_WEATHER_API_KEY: ${{ secrets.ACCU_WEATHER_API_KEY }}
          NIWA_API_KEY: ${{ secrets.NIWA_API_KEY }}

      - name: Send prediction via email
        if: ${{ steps.run_predictor.outputs.prediction }}
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Do not reply - Your kayak timing prediction
          # Required recipients' addresses:
          to: ${{ secrets.MAIL_RECIPIENTS }}
          # Required sender full name (address can be skipped):
          from: ${{ secrets.MAIL_SENDER }}
          # Optional plain body:
          body: ${{ steps.run_predictor.outputs.prediction }}
